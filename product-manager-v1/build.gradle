import com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer

buildscript {
  repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath "com.github.jengelman.gradle.plugins:shadow:2.0.4"
//    classpath "com.github.jengelman.gradle.plugins:shadow:2.0.3"
    classpath "io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE"
    classpath "net.ltgt.gradle:gradle-apt-plugin:0.15"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
  }
}

version "0.1"
group "com.stackline"

apply plugin: "io.spring.dependency-management"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "application"
apply plugin: "java"
apply plugin: "net.ltgt.apt-eclipse"
apply plugin: "net.ltgt.apt-idea"
apply plugin: "groovy"
apply plugin: "kotlin"
apply plugin: "kotlin-kapt"

repositories {
  mavenLocal()
  mavenCentral()
  maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencyManagement {
  imports {
    mavenBom 'io.micronaut:bom:1.0.0-SNAPSHOT'
  }
}

dependencies {
  annotationProcessor "io.micronaut:inject-java"
  compile "io.micronaut:http-client"
//  compile "io.micronaut:management"
//  compile "io.micronaut:security"
//  compile "io.micronaut:security-jwt"
  compile "io.micronaut:inject"
  compile "io.micronaut:runtime"
  compile "io.micronaut:runtime-groovy"
  compile "io.micronaut:http-server-netty"
  compile "io.micronaut.configuration:cassandra"
  compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
  compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
  compile "com.jsoniter:jsoniter:0.9.19"
  compile "javax.annotation:javax.annotation-api:1.3.2"
  compile "org.elasticsearch.client:elasticsearch-rest-high-level-client:6.2.4"
  compile "com.typesafe.akka:akka-actor_2.12:2.5.13"
  compile "com.typesafe.akka:akka-stream-kafka_2.12:0.20"
  compile "com.lightbend.akka:akka-stream-alpakka-elasticsearch_2.12:0.19"
//  compile "com.lightbend.akka:akka-stream-alpakka-sqs_2.12:0.19"
//  compile "com.lightbend.akka:akka-stream-alpakka-sns_2.12:0.19"
//  compile "com.lightbend.akka:akka-stream-alpakka-kinesis_2.12:0.19"
//  compile "io.projectreactor:reactor-core:3.1.7.RELEASE"
//  compile "io.projectreactor:reactor-bus:2.0.8.RELEASE"
//  compile "com.datastax.cassandra:cassandra-driver-core:3.5.0"
//  compile "org.apache.commons:commons-csv:1.5"
  compileOnly "io.micronaut:inject-java"
  compileOnly "io.micronaut:inject-groovy"
  kapt "io.micronaut:inject-java"
  runtime "ch.qos.logback:logback-classic:1.2.3"
  testCompile("org.spockframework:spock-core:1.1-groovy-2.4") {
    exclude group: "org.codehaus.groovy", module: "groovy-all"
  }
  testCompile "io.micronaut:inject-groovy"
  testCompile "junit:junit:4.12"
  testCompile "io.micronaut:inject-java"
}

shadowJar {
  mergeServiceFiles()
  transform(AppendingTransformer) {
    resource = 'reference.conf'
  }
//  append('reference.conf')
}

mainClassName = "com.stackline.Application"
compileJava.options.compilerArgs += '-parameters'
compileTestJava.options.compilerArgs += '-parameters'

test {
  useJUnitPlatform()
}

compileKotlin {
  kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
  kotlinOptions.jvmTarget = "1.8"
}
